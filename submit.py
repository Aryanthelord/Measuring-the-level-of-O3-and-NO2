# -*- coding: utf-8 -*-
"""submit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17jcWbBhsUsfwqhe2QjA05TkqA1PrLz-n
"""

import numpy as np
import pickle as pkl
import pandas as pd
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split

def predict():
  df = pd.read_csv( "dummy_test.csv" )
  X=df[['o3op1', 'o3op2', 'no2op1', 'no2op2', 'temp', 'humidity']]
  y_o3=df['OZONE']
  y_no2=df['NO2']
  X_train, X_test, y_o3_train, y_o3_test = train_test_split(X, y_o3, test_size=0.2, random_state=0)
  X_train, X_test, y_no2_train, y_no2_test = train_test_split(X, y_no2, test_size=0.2, random_state=0)
  regr_o3 = RandomForestRegressor(max_depth=2, random_state=0).fit(X_train, y_o3_train)
  regr_no2 = RandomForestRegressor(max_depth=2, random_state=0).fit(X_train, y_no2_train)
  with open('OZONE.pkl','wb') as file:
    pkl.dump(regr_o3,file)
  file.close()

  with open('NO_2.pkl','wb') as file:
    pkl.dump(regr_no2,file)
  file.close()

  pred_o3=regr_o3.predict(y_o3_train)
  pred_no2=regr_no2.predict(y_no2_train)
  return (pred_o3, pred_no2)

def my_predict(df):
  
  model_no2 = None
  model_o3 = None
  with open ("OZONE.pkl", "rb") as file:
    model_o3=pkl.load(file)
  file.close()

  with open ("NO_2.pkl", "rb") as file:
    model_no2=pkl.load(file)
  file.close()
  
  pred_no2=model_no2.predict(df.drop(["Time"],axis="columns").to_numpy())
  pred_o3=model_o3.predict(df.drop(["Time"],axis="columns").to_numpy())

  return (pred_o3, pred_no2)